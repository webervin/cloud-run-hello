name: ci

on:
  push:

env:
  TEST_TAG: us-central1-docker.pkg.dev/ervin-cloud-run-demo2/docker-demo/hello:test
  LATEST_TAG: us-central1-docker.pkg.dev/ervin-cloud-run-demo2/docker-demo/hello:latest

concurrency:
  group: main
  cancel-in-progress: true  
jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      imageid: ${{ steps.docker_push.outputs.imageid }}
      digest: ${{ steps.docker_push.outputs.digest }}
      access_token: ${{ steps.auth.outputs.access_token}}
    steps:
      - uses: 'actions/checkout@v3'
      - run: |
          # reset timestamps:
          find . -type f -exec touch --date="@0" {} +  
      - id: 'auth'
        name: 'Authenticate to Google Cloud'
        uses: 'google-github-actions/auth@v1'
        with:
          credentials_json: '${{ secrets.GOOGLE_CREDENTIALS }}'
          token_format: access_token
          access_token_lifetime: '300s'
      - uses: 'docker/login-action@v2'
        with: 
          registry: us-central1-docker.pkg.dev
          username: 'oauth2accesstoken'
          password: '${{ steps.auth.outputs.access_token }}'
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3    
      - name: Build and export to Docker
        id: docker_push
        uses: docker/build-push-action@v5
        env:
          SOURCE_DATE_EPOCH: 0
        with:
          context: .
          load: true
          # push: true
          file: placeholder.dockerfile
          tags: ${{ env.TEST_TAG }}
          cache-to: 'type=gha,mode=max'
          cache-from: 'type=gha'
          build-args: |
            SOURCE_DATE_EPOCH=0
      - run: |
          docker push ${{ env.TEST_TAG }}
      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: ${{ env.TEST_TAG }}
          format: 'spdx-json'
          output: '/github/workspace/results.spdx'
          exit-code: '0'
      - name: 'Set up Cloud SDK'
        uses: 'google-github-actions/setup-gcloud@v1'
      - run: |
          # upload sbom
          gcloud artifacts sbom load \
            --source results.spdx \
            --uri ${{ env.TEST_TAG }}  
  provenance:
    needs: [build]
    permissions:
      actions: read # for detecting the Github Actions environment.
      id-token: write # for creating OIDC tokens for signing.
      packages: write # for uploading attestations.
    if: startsWith(github.ref, 'refs/tags/')
    uses: slsa-framework/slsa-github-generator/.github/workflows/generator_container_slsa3.yml@v1.9.0
    with:
      image: ${{ needs.build.outputs.imageid }}
      digest: ${{ needs.build.outputs.digest }}
      registry-username: oauth2accesstoken
    secrets:
      registry-password: ${{needs.build.outputs.access_token }}          